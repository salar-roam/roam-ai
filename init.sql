-- === EXTENSIONS ===
create extension if not exists pgvector;
create extension if not exists postgis;

-- === CORE TABLES ===
create table towns (
  id          uuid primary key default gen_random_uuid(),
  name        text not null unique,
  tz          text not null
);

create table hosts (
  id              uuid primary key default gen_random_uuid(),
  name            text not null,
  phone_whatsapp  text not null,
  instagram       text
);

create table locations (
  id       uuid primary key default gen_random_uuid(),
  name     text not null,
  geom     geography(point,4326) not null,
  address  text
);

create table events (
  id            uuid primary key default gen_random_uuid(),
  title         text not null,
  description   text,
  price_value   numeric(10,2) not null,
  price_text    text,
  currency      char(3) not null,
  town_id       uuid references towns(id) on delete cascade,
  host_id       uuid references hosts(id) on delete cascade,
  location_id   uuid references locations(id) on delete cascade,
  is_on_demand  boolean default false,
  tags          text[] not null,
  recurrence_rule text,
  image_url     text,
  links         jsonb,
  embedding     vector(1536),
  tsv           tsvector generated always as (to_tsvector('simple', coalesce(title,'')||' '||coalesce(description,''))) stored,
  created_at    timestamptz default now()
);

create table event_occurrences (
  id         uuid primary key default gen_random_uuid(),
  event_id   uuid references events(id) on delete cascade,
  start_ts   timestamptz not null,
  end_ts     timestamptz,
  cancelled  boolean default false
);

create table event_actions (
  id           bigint generated by default as identity primary key,
  event_id     uuid references events(id) on delete cascade,
  action       text check (action in ('view','click')),
  occurred_at  timestamptz default now()
);

-- === INDEXES ===
create index events_tsv_idx   on events using gin(tsv);
create index events_vec_idx   on events using ivfflat (embedding vec_l2_ops) with (lists=100);
create index events_tags_idx  on events using gin(tags);
create index events_price_idx on events(price_value);
create index occ_start_idx    on event_occurrences(start_ts);
create index locations_geom_idx on locations using gist(geom);

-- === RLS ===
alter table events enable row level security;
alter table event_occurrences enable row level security;

create policy anon_read_events on events
  for select using (true);
create policy anon_read_occ on event_occurrences
  for select using (start_ts >= now());

-- === SEED DATA ===
insert into towns (name,tz) values
  ('cabarete','America/Santo_Domingo'),
  ('las terrenas','America/Santo_Domingo');
